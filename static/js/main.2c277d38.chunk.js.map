{"version":3,"sources":["components/Header.js","components/AddForm.js","components/Todo.js","List.js","components/Home.js","components/Login.js","components/About.js","components/QuitInfo.js","components/QuitList.js","components/Insert.js","components/HabitService.js","components/Quit.js","config/routes.js","Main.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","Nav","className","Link","style","position","right","AddForm","addTodo","useState","value","setValue","Form","onSubmit","e","preventDefault","Group","Control","type","placeholder","onChange","target","Todo","id","text","todo","index","completeTodo","updateTodo","removeTodo","updateTodoText","display","formValue","formState","setFormState","toggleBodyForm","event","todoText","console","log","lineThrough","textDecoration","isCompleted","controlId","Button","onClick","List","props","todos","setTodos","useEffect","a","fetch","response","json","jsonData","allTodos","map","_id","getData","catch","err","newTodos","url","bodyObj","param","method","headers","body","JSON","stringify","then","res","splice","key","otherParam","results","error","Home","Login","About","QuitInfo","QuitList","quit","removeHabit","updateHabit","quitText","Insert","habit","addHabit","Label","fontWeight","top","to","Quit","quits","setQuit","allHabits","newHabits","length","exact","path","component","render","match","params","Main","routes","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2c277d38.chunk.js","sourcesContent":["import React from 'react'\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nfunction Header() {\n  return (\n      <>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href={\"/\"}>Habitico</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href={\"/list\"}>Todo List</Nav.Link>\n            <Nav.Link href={\"/quit\"}>Quit Bad Habits</Nav.Link>\n            <Nav.Link href={\"/about\"} style={{ position: 'absolute', right: '80px' }}>About</Nav.Link>\n            <Nav.Link href={\"/login\"} style={{position: 'absolute', right: '10px'}}>Sign In</Nav.Link>\n          </Nav>\n        </Navbar>\n      </>\n  );\n}\n\nexport default Header ","import React, { useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\n// import Button from \"react-bootstrap/Button\";\n\nfunction AddForm({ addTodo }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!value) return\n    addTodo(value);\n    setValue(\"\")\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Enter todos here...\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n          />\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddForm","import React, { useState } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\"\n\nfunction Todo({ id, text, todo, index, completeTodo, updateTodo, removeTodo, updateTodoText }) {\n  const [formState, setFormState] = useState({\n    display: \"none\",\n    formValue: \"\"\n  });\n\n  const toggleBodyForm = event => {\n    event.preventDefault();\n    formState.display === \"block\"\n      ? setFormState({ display: \"none\", formValue: \"\" })\n      : setFormState({ display: \"block\", formValue: \"\" });\n  };\n\n  const onChange = event => {\n    setFormState({ display: \"block\", formValue: event.target.value });\n    console.log(formState);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    text = formState.formValue;\n    updateTodo(id, text, index);\n    updateTodoText(text, index);\n    toggleBodyForm(event)\n  };\n\n  const todoText = todo.text;\n  console.log(\"todoText: \", todoText);\n\n  const lineThrough = {\n    textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n  }\n\n  return (\n    <div className=\"habit\">\n      <div id={index} style={lineThrough}>\n        <h2 className=\"text\">{todoText}</h2>\n      </div>\n      <div className=\"completeButton\">\n        <Form onSubmit={(event) => onSubmit(event)}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Update todo...\"\n              style={formState}\n              className=\"update-input\"\n              onChange={(event) => onChange(event)}\n            />\n          </Form.Group>\n        </Form>\n        <Button\n          className=\"button\"\n          variant=\"outline-primary\"\n          onClick={(event) => toggleBodyForm(event)}\n        >\n          Edit\n        </Button>{\" \"}\n        <Button\n          className=\"button\"\n          variant=\"outline-primary\"\n          onClick={() => completeTodo(todo, index)}\n        >\n          Complete\n        </Button>{\" \"}\n        <Button\n          className=\"button\"\n          variant=\"outline-primary\"\n          onClick={() => removeTodo(todo, index)}\n        >\n          Delete\n        </Button>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default Todo","import React, { useState, useEffect } from 'react';\nimport './List.css';\nimport AddForm from './components/AddForm'\nimport Todo from './components/Todo'\n\nfunction List(props) {\n  const [todos, setTodos] = useState([\n    {\n      text: '',\n      id: null,\n      isCompleted: false\n    }\n  ])\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(`https://vast-anchorage-73432.herokuapp.com/getList`)\n      const jsonData = await response.json()\n      const allTodos = jsonData.map(todo => {\n        const todoObject = {\n          text: todo.todo,\n          id: todo._id,\n          isCompleted: false\n        }\n        return todoObject\n      })\n      setTodos(allTodos)\n    }\n    getData().catch((err) => console.log(err));\n  }, [props])\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n\n    // make a POST request\n    const url = \"https://vast-anchorage-73432.herokuapp.com/\";\n    const bodyObj = {\n      \"todo\": text\n    }\n    const otherParam = {\n      method: \"POST\",\n      body: JSON.stringify(bodyObj),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n    fetch(url, otherParam)\n      .then(results => results.json)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(error => console.log(error));\n  }\n\n  const completeTodo = (todo, index) => {\n    const newTodos = [...todos]\n    newTodos[index].isCompleted = true\n    setTodos(newTodos);\n    removeTodo(todo)\n  }\n\n  const updateTodoText = (text, index) => {\n    const newTodos = [...todos];\n    newTodos[index].text = text\n    setTodos(newTodos)\n  };\n\n  const updateTodo = (id, text, index) => {\n    console.log(id, text, index)\n    const url = `https://vast-anchorage-73432.herokuapp.com/${id}`;\n    const bodyObj = {\n      \"todo\": text\n    }\n    const param = {\n      method: \"PUT\", \n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bodyObj)\n    }\n    fetch(url, param)\n      .then(res => res.json())\n      .catch(err => console.log(\"Could not update todo \\n\", err))\n  }\n\n  const removeTodo = (todo, index) => {\n    const newTodos = [...todos];\n    \n    fetch(`https://vast-anchorage-73432.herokuapp.com/${todo.id}`, { method: \"DELETE\" })\n      .then(res => res.json())\n      .catch(err => console.log('Could not delete todo \\n', err))\n      newTodos.splice(index, 1);\n      setTodos(newTodos);\n  };\n\n  if (todos === null) {\n    return <h3>Loading...</h3>\n  } else {\n    return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        <h1 className=\"title\">Todo</h1>\n        <h2 className=\"sub-title\">What is your main focus for today?</h2>\n        <div className=\"habit-list\">\n          {todos.map((todo, index) => (\n            <Todo\n              id={todo.id}\n              text={todo.text}\n              key={index}\n              index={index}\n              todo={todo}\n              completeTodo={completeTodo}\n              updateTodo={updateTodo}\n              removeTodo={removeTodo}\n              updateTodoText={updateTodoText}\n            />\n          ))}\n          <AddForm addTodo={addTodo} />\n        </div>\n      </div>\n    </div>\n  )}\n}\n\nexport default List;","import React from 'react'\n\nfunction Home() {\n  return (\n    <div className=\"main\">\n      <div className=\"wrap\">\n        <h1 className=\"title\">Habitico</h1>\n        <h2 className=\"sub-title\">Increase Your Productivity</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react'\n\nfunction Login() {\n  return (\n    <div>\n      <h1 className=\"title\">Sign In</h1>\n    </div>\n  )\n}\n\nexport default Login ","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n      <h1 className=\"title\">About Us</h1>\n    </div>\n  )\n}\n\nexport default About","import React from 'react'\n\nfunction QuitInfo(props) {\n  return (\n    <div>\n      <h1 className=\"title\">{props.id}</h1>\n      <div className=\"controls\">\n        <button>{props.id}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuitInfo","import React, { useState } from 'react'\n// import Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction QuitList({ id, text, index, quit, updateHabit, removeHabit }) {\n  const [formState, setFormState] = useState({\n    display: \"none\",\n    formValue: \"\",\n  });\n\n  const toggleBodyForm = (event) => {\n    event.preventDefault();\n    formState.display === \"block\"\n      ? setFormState({ display: \"none\", formValue: \"\" })\n      : setFormState({ display: \"block\", formValue: \"\" });\n  };\n\n  // const onChange = (event) => {\n  //   setFormState({ display: \"block\", formValue: event.target.value });\n  //   console.log(formState);\n  // };\n\n  // const onSubmit = (event) => {\n  //   event.preventDefault();\n  //   text = formState.formValue;\n  //   updateHabit(id, text, index);\n  //   console.log(text);\n  //   toggleBodyForm(event);\n  // };\n\n  const quitText = quit.text;\n  console.log(\"quitText: \", quitText);\n\n  return (\n    <div>\n      <h2 className=\"text\">{quitText}</h2>\n      <div>\n        <Button\n          className=\"button\"\n          variant=\"outline-primary\"\n          onClick={(event) => toggleBodyForm(event)}\n        >\n          Edit\n        </Button>{\" \"}\n        <Button\n          className=\"button\"\n          variant=\"outline-primary\"\n          onClick={() => removeHabit(quit, index)}\n        >\n          Delete\n        </Button>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default QuitList","import React, { useState } from 'react'\nimport Form from \"react-bootstrap/Form\";\nimport { addHabit }  from \"./HabitService\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Insert() {\n  const [value, setValue] = useState(\"\")\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!value) return;\n    addHabit(value);\n    setValue(\"\");\n  }\n  \n  return (\n    <div className=\"app\">\n      <h2 className=\"title\">What are you trying to quit?</h2>\n      <div className=\"quit-list\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label style={{fontWeight: \"600\"}}>I will quit:</Form.Label>\n            <Form.Control \n              value={value}\n              onChange={e => setValue(e.target.value)}\n            />\n          <Button style={{position: \"relative\", top: \"15px\"}} to=\"/insert/time\">Next</Button>\n        </Form.Group>\n      </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Insert","\n\nconst addHabit = (text) => {\n  const url = \"https://vast-anchorage-73432.herokuapp.com/habits\";\n  const bodyObj = {\n    habit: text,\n  };\n  const param = {\n    method: \"POST\",\n    body: JSON.stringify(bodyObj),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  fetch(url, param)\n    .then((results) => results.json)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((error) => console.log(error));\n};\n\nconst updateHabit = (id, text, index) => {\n  const url = `https://vast-anchorage-73432.herokuapp.com/habits/${id}`;\n  const bodyObj = {\n    habit: text,\n  };\n  const param = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(bodyObj),\n  };\n  fetch(url, param)\n    .then((res) => res.json())\n    .catch((err) => console.log(\"Could not update habit \\n\", err));\n};\n\n\n\nexport { addHabit }","import React, { useState, useEffect } from 'react'\nimport QuitList from './QuitList'\nimport Insert from './Insert'\nimport '../Quit.css'\nimport Button from \"react-bootstrap/Button\";\n\nfunction Quit(props) {\n  const [quits, setQuit] = useState([\n    {\n      text:'',\n      id: null,\n    }\n  ])\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(\n        \"https://vast-anchorage-73432.herokuapp.com/habits\"\n      );\n      const jsonData = await response.json()\n      const allHabits = jsonData.map(habit => {\n        const habitObject = {\n          text: habit.habit,\n          id: habit._id\n        }\n        return habitObject\n      })\n      setQuit(allHabits)\n    }\n    getData().catch((err) => console.log(err))\n  }, [props])\n\n\n    const updateHabit = (id, text, index) => {\n      console.log(id, text, index)\n      const url = `https://vast-anchorage-73432.herokuapp.com/habits/${id}`;\n      const bodyObj = {\n        \"habit\": text\n      }\n      const param = {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(bodyObj)\n      }\n      fetch(url, param)\n        .then(res => res.json())\n        .catch(err => console.log(\"Could not update habit \\n\", err))\n    }\n\n    const removeHabit = (habit, index) => {\n      const newHabits = [...quits];\n      setQuit(newHabits);\n      newHabits.splice(index, 1);\n\n      fetch(`https://vast-anchorage-73432.herokuapp.com/habits/${habit.id}`, {\n        method: \"DELETE\",\n      })\n        .then((res) => res.json())\n        .catch((err) => console.log(\"Could not delete habit \\n\", err));\n      \n    };\n\n  return (\n    <div className=\"main\">\n      <div className=\"wrap\">\n        <h1 className=\"title\">Quit Bad Habits</h1>\n        <h2 className=\"sub-title\">\n          Everyone has something they want to quit...\n        </h2>\n        <div>\n          {quits.length ? (\n            quits.map((quit, index) => (\n              <QuitList\n                id={quit.id}\n                text={quit.text}\n                key={index}\n                index={index}\n                quit={quit}\n                updateHabit={updateHabit}\n                removeHabit={removeHabit}\n              />\n            ))\n          ) \n           : (\n            <div className=\"button-container\">\n              <Button className=\"start\" variant=\"secondary\" href={\"/insert\"}>\n                Add to the quit list\n              </Button>\n            \n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quit","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport List from '../List'\nimport Home from '../components/Home'\nimport Login from '../components/Login'\nimport About from '../components/About'\nimport QuitInfo from '../components/QuitInfo'\nimport Quit from '../components/Quit'\nimport Insert from '../components/Insert'\n\n\nexport default (\n  <div>\n    <Switch>\n      <Route exact path='/' component={ Home } />\n      <Route path='/list' component={ List } />\n      {/* <Route path='/list/:id' render={(props) => {\n        return <HabitInfo id={props.match.params.id}/>\n      }} /> */}\n      <Route exact path='/quit' component={ Quit } />\n      <Route path='/quit/:id' render={(props) => {\n        return <QuitInfo id={props.match.params.id}/>\n      }} />\n      <Route exact path='/insert' component={ Insert } />\n      <Route path='/insert/time' component={ Insert } />\n      <Route path='/insert/price' component={ Insert } />\n      <Route path='/about' component={ About } />\n      <Route path='/login' component={ Login } />\n    </Switch>\n  </div>\n)","import React from \"react\";\nimport Header from './components/Header'\nimport routes from './config/routes'\n\nfunction Main() {\n  return (\n    <div>\n      <Header />\n      { routes }\n    </div>\n  );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Main />\n  </Router>, document.getElementById('root')\n);\n\nserviceWorker.unregister(); "],"sourceRoot":""}